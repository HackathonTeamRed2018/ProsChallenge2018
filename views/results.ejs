<!DOCTYPE html>
<!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7"> <![endif]-->
<!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8"> <![endif]-->
<!--[if IE 8]>         <html class="no-js lt-ie9"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class="no-js">
<!--<![endif]-->

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title></title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
        crossorigin="anonymous">
    <link href="https://fonts.googleapis.com/css?family=Roboto+Slab:700" rel="stylesheet">
    <link rel="stylesheet" href="/stylesheets/style.css">
    <link rel="stylesheet" href="/stylesheets/results.css">
</head>

<body>
    <!--[if lt IE 7]>
            <p class="browsehappy">You are using an <strong>outdated</strong> browser. Please <a href="#">upgrade your browser</a> to improve your experience.</p>
        <![endif]-->
    <div class="container">
        <div class="row">
            <div class="col-6-md mx-auto">
                <% if (results) { %>
<<<<<<< HEAD
                    <div class="card my-3" id="result-description">
                        <div class="card-body">
                            <h4 class="card-title">Here is the Best Deal Found</h4>
                            <p class="card-text">
                                Here is what we found for your trip to <%= results.to %>.
                                <br>
                                Price: $<%= results.price %>
                                <br>
                                Flights: <%= results.route.length - 1 %>
                            </p>
                        </div>
                    </div>
                <% } %>
                <% for (let stop in results.route) { %>
                    <div class="card my-3" id="stop-number-<%= stop %>">
                        <div class="card-body">
                            <h5 class="card-title">Departure</h5>
                            <h6 class="card-text">
                                <ul>
                                    <li>City: <%= results.route[stop] %></li>
                                </ul>
                            </h6>
                        </div>
=======
                <div class="card my-3" id="result-description">
                    <div class="card-body">
                        <h3 class="card-title">Here is the Best Deal Found</h3>
                        <p class="card-text">
                            Here is what we found for your trip to
                            <%= results.to %>.
                            <br>
                            Price:
                            <%= results.price %>
                            <br>
                            Flights:
                            <%= results.route.length - 1 %>
                        </p>
                    </div>
                </div>
                <h4>Itinerary</h4>
                <% } %>
                <% for(let stop in results.route) { %>
                <div class="card my-3" id="stop-number-<%= stop %>">
                    <div class="card-body">
                        <h5 class="card-title">Departure</h5>
                        <h6 class="card-text">
                            <ul>
                                <li>City:
                                    <%= results.route[stop] %>
                                </li>
                            </ul>
                        </h6>
>>>>>>> 080b38779237b3dea4cae217b924c8928d3249c5
                    </div>
                </div>
                <% } %>
            </div>
            <div class="col-md-6 mx-auto">
                <div class="my-3 position-sticky" id="googleMap" style="width:100%;height:400px;">
                </div>
                <script>
                    var poly, map;

                    function initMap() {
                        var directionsService = new google.maps.DirectionsService;
                        var directionsDisplay = new google.maps.DirectionsRenderer;
                        map = new google.maps.Map(document.getElementById('googleMap'), {
                            zoom: 8,
                            center: {
                                lat: -34.397,
                                lng: 150.644
                            }
                        });
                        directionsDisplay.setMap(map);

                        poly = new google.maps.Polyline({
                            strokeColor: '#000000',
                            strokeOpacity: 1.0,
                            strokeWeight: 3
                        });
                        poly.setMap(map);

                        drawPolygons();
                        //calculateAndDisplayRoute(directionsService, directionsDisplay);

                        //var geocoder = new google.maps.Geocoder();

                        //geocodeAddress(geocoder, map);
                        // document.getElementById('submit').addEventListener('click', function() {
                        //     geocodeAddress(geocoder, map);
                        // });
                    }

                    function addLatLng(loc) {
                        var path = poly.getPath();

                        // Because path is an MVCArray, we can simply append a new coordinate
                        // and it will automatically appear.
                        path.push(loc);

                        // Add a new marker at the new plotted point on the polyline.
                        var marker = new google.maps.Marker({
                            position: loc,
                            title: '#' + path.getLength(),
                            map: map
                        });
                    }


                    function getLatLng(location, bounds) {
                        return new Promise((resolve, reject) => {
                            var geocoder = new google.maps.Geocoder();
                            geocoder.geocode({
                                'address': location
                            }, function (results, status) {
                                if (status === 'OK') {
                                    console.log("Return loc: " + results[0].geometry.location);
                                    map.setCenter(results[0].geometry.location);
                                    bounds.extend(results[0].geometry.location);
                                    addLatLng(results[0].geometry.location);
                                    resolve(results[0].geometry.location);
                                } else {
                                    console.log('Geocode was not successful for the following reason: ' +
                                        status);
                                    reject("err");
                                }
                            });
                        });
                    }

                    function drawPolygons() {
                        var bounds = new google.maps.LatLngBounds();
                        var waypts = [];
                        let stops = [];
                        <%for (let i = 0; i < results.route.length; i++) {%>
                        stops.push('<%=results.route[i] %>');
                        <%}%>

                            const mapSeries = async (iterable, action) => {
                                for (const x of iterable) {
                                    await action(x,bounds);
                                }
                                map.fitBounds(bounds)
                            }
                            mapSeries(stops, getLatLng);
                            console.log("Bounds: " + bounds);

                            ;
                        
                    }


                    function addStop(stops, bounds) {
                        return new Promise((res, reject) => {
                            // let promises = [];
                            // for (let i = 0; i < stops.length; i++) {
                            //     promises.push(getLatLng(stops[i], bounds));
                            // }

                            
                            // Promise.all(promises).then((res) => {
                            //     res(1)

                            // }).catch((err) => {
                            //     console.log(err);
                            // })

                        });
                    }


                    function geocodeAddress(geocoder, resultsMap) {
                        var address;
                        <%if (results) {%>
                        address = '<%= results.from %>';
                        <%} else {%>
                        address = "houston";
                        <%}%>
                        geocoder.geocode({
                            'address': address
                        }, function (results, status) {
                            if (status === 'OK') {
                                //resultsMap.setCenter(results[0].geometry.location);
                                var marker = new google.maps.Marker({
                                    map: resultsMap,
                                    position: results[0].geometry.location
                                });
                            } else {
                                alert('Geocode was not successful for the following reason: ' + status);
                            }
                        });
                    }

                    function calculateAndDisplayRoute(directionsService, directionsDisplay) {
                        var waypts = [];
                        let stops = [];
                        <%for (let i = 1; i < results.route.length - 1; i++) {%>
                        stops.push('<%=results.route[i] %>');
                        <%}%>
                        for (var i = 0; i < stops.length; i++) {
                            waypts.push({
                                location: stops[i],
                                stopover: true
                            });
                        }

                        var start, end;
                        <%if (results) {%>
                        start = '<%= results.from %>';
                        end = '<%= results.to %>';
                        <%} else {%>
                        start = "houston";
                        end = "dallas";
                        <%}%>

                        console.log("Start: " + start + " waypts: " + JSON.stringify(waypts, null, 2) + " End: " + end);

                        directionsService.route({
                            origin: start,
                            destination: end,
                            waypoints: waypts,
                            optimizeWaypoints: true,
                            travelMode: 'WALKING'
                        }, function (response, status) {
                            if (status === 'OK') {
                                directionsDisplay.setDirections(response);
                                var route = response.routes[0];
                                // var summaryPanel = document.getElementById('directions-panel');
                                // summaryPanel.innerHTML = '';
                                // // For each route, display summary information.
                                // for (var i = 0; i < route.legs.length; i++) {
                                //     var routeSegment = i + 1;
                                //     summaryPanel.innerHTML += '<b>Route Segment: ' + routeSegment +
                                //         '</b><br>';
                                //     summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                                //     summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                                //     summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                                // }
                            } else {
                                window.alert('Directions request failed due to ' + status);
                            }
                        });
                    }

                    // var mapProp = {
                    //     center: new google.maps.LatLng(51.508742, -0.120850),
                    //     zoom: 5,
                    // };
                    // var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
                </script>
            </div>
        </div>
    </div>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBHAgpl5ks7W74bIQGe28wjeWgvhIYZ70A&callback=initMap"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>
</body>

</html>